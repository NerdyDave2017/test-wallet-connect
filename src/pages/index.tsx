import Head from "next/head";
import Image from "next/image";
import styles from "@/styles/Home.module.css";
import { useState } from "react";
import { useAccount, useDisconnect } from "wagmi";
import { useContractWrite, usePrepareContractWrite } from "wagmi";
import { parseEther } from "viem/utils";
import { abi } from "../contractAbi";

const ContractAddress = "0x38E1c0cEb06abD37fd07765B6D6eCbb171878d3e";

export default function Home() {
  const [isNetworkSwitchHighlighted, setIsNetworkSwitchHighlighted] =
    useState(false);
  const [isConnectHighlighted, setIsConnectHighlighted] = useState(false);

  const [recepient, setRecipient] = useState("");

  const { address } = useAccount();
  const { disconnect } = useDisconnect();

  const { config } = usePrepareContractWrite({
    address: ContractAddress,
    abi: [...abi],
    functionName: "sendViaCall",
    value: parseEther("0.01"),
    args: [recepient],
  });

  const {
    data,
    isError,
    isLoading,
    isSuccess,
    error,
    write: send,
  } = useContractWrite(config);

  const handleErrorMessage = (mess: string) => {
    const res = mess.split(".");

    return res[0];
  };

  const closeAll = () => {
    setIsNetworkSwitchHighlighted(false);
    setIsConnectHighlighted(false);
  };
  return (
    <>
      <Head>
        <title>WalletConnect | Next Starter Template</title>
        <meta name="description" content="Generated by create-wc-dapp" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header>
        <div
          className={styles.backdrop}
          style={{
            opacity: isConnectHighlighted || isNetworkSwitchHighlighted ? 1 : 0,
          }}
        />
        <div className={styles.header}>
          <div className={styles.logo}>LOGO</div>
          <div className={styles.buttons}>
            <div
              onClick={closeAll}
              className={`${styles.highlight} ${
                isNetworkSwitchHighlighted ? styles.highlightSelected : ``
              }`}
            >
              <w3m-network-button />
            </div>
            <div
              onClick={closeAll}
              className={`${styles.highlight} ${
                isConnectHighlighted ? styles.highlightSelected : ``
              }`}
            >
              <w3m-button />
            </div>
          </div>
        </div>
      </header>
      <main className={styles.main}>
        <div className={styles.wrapper}>
          <div className={styles.container}>
            <h1>Click To Send Funds</h1>
            <input
              type="text"
              className={styles.input}
              onChange={(e) => setRecipient(e.target.value)}
            />
            {isError && (
              <span className={styles.error}>
                {handleErrorMessage(error?.message as string)}
              </span>
            )}
            {isSuccess && (
              <span className={styles.success}>
                <a
                  href={`http://sepolia.etherscan.io/${data?.hash}`}
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  {data?.hash}
                </a>
              </span>
            )}
            {isLoading && <span>loading...</span>}

            <div className={styles.content}>
              <button className={styles.button} onClick={send}>
                Send Funds
              </button>
              {address && (
                <button className={styles.button} onClick={() => disconnect()}>
                  Disconnect!
                </button>
              )}
            </div>
          </div>
        </div>
      </main>
    </>
  );
}
